{"version":3,"sources":["Components/Button.js","TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","style","onClick","text","TodoList","getListInputValue","localStorage","getItem","useState","inputValue","setInputValue","JSON","parse","listInputValue","setListInputValue","type","onChange","e","target","value","changeInputValue","find","alert","done","setItem","stringify","map","object","index","splice","deleteLiElement","doneLiElement","App","result","setResult","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAceA,MAZf,SAAgBC,GACd,OACE,wBACEC,UAAWD,EAAMC,UACjBC,MAAOF,EAAME,MACbC,QAASH,EAAMG,QAHjB,SAKGH,EAAMI,Q,OCyDEC,G,MA9DE,WACf,IAAMC,EAAoBC,aAAaC,QAAQ,cAAgB,KAE/D,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,mBAC1CG,KAAKC,MAAMP,IADb,mBAAOQ,EAAP,KAAuBC,EAAvB,KAmCA,OACE,gCACE,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAlBR,SAACA,GACxBP,EAAcO,EAAEC,OAAOC,OAiBeC,CAAiBH,MACrD,wBAAQf,QAlCc,WACnBW,EAAeQ,MAAK,qBAAGF,QAAsBV,KAMhDa,MAAM,2EALNR,EAAkB,CAChB,CAAEK,MAAOV,EAAYc,MAAM,IADZ,mBAEZV,KAKPP,aAAakB,QACX,YACAb,KAAKc,UAAL,CAAgB,CAAEN,MAAOV,IAAzB,mBAA0CI,OAuB1C,mBACA,6BACGA,EAAea,KAAI,SAACC,EAAQC,GAAT,OAClB,qBAAgB5B,UAAS,UAAK2B,EAAOJ,KAAO,eAAiB,IAA7D,UACGI,EAAOR,MACP,GACD,wBAAQjB,QAAS,kBArBH,SAAC0B,GACvBf,EAAegB,OAAOD,EAAO,GAC7Bd,EAAkB,YAAID,IACtBP,aAAakB,QAAQ,YAAab,KAAKc,UAAUZ,IAkBlBiB,CAAgBF,IAAvC,oBACA,wBACE1B,QAAS,kBAjBC,SAAC0B,GACrBf,EAAee,GAAOL,MAAQV,EAAee,GAAOL,KACpDT,EAAkB,YAAID,IACtBP,aAAakB,QAAQ,YAAab,KAAKc,UAAUZ,IAcxBkB,CAAcH,IAC7B5B,UAAS,UAAK2B,EAAOJ,MAAQ,kBAF/B,oBAJOK,aCTJI,MAnCf,WACE,MAA4BxB,mBAAS,GAArC,mBAAOyB,EAAP,KAAeC,EAAf,KAcA,OACE,sBAAKlC,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAQG,KAAK,IAAIH,UAAU,QAAQE,QAX3B,WACZgC,EAAUD,EAAS,MAWf,qBAAKjC,UAAU,SAAf,SACE,+BAAOiC,MAET,cAAC,EAAD,CAAQ9B,KAAK,IAAIH,UAAU,OAAOE,QAnB3B,WACXgC,EAAUD,EAAS,MAmBf,cAAC,EAAD,CACE9B,KAAK,QAELH,UAAU,QACVE,QAhBM,WACZgC,EAAU,SAkBR,cAAC,EAAD,QCvBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.12c3e712.chunk.js","sourcesContent":["import \"./Button.css\";\n\nfunction Button(props) {\n  return (\n    <button\n      className={props.className}\n      style={props.style}\n      onClick={props.onClick}\n    >\n      {props.text}\n    </button>\n  );\n}\n\nexport default Button;\n","import { useState } from \"react\";\nimport \"./TodoList.css\";\nimport \"../Components/Button\";\n\nconst TodoList = () => {\n  const getListInputValue = localStorage.getItem(\"todosList\") || \"[]\";\n  // console.log(getListInputValue);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [listInputValue, setListInputValue] = useState(\n    JSON.parse(getListInputValue)\n  );\n\n  const addListInputValue = () => {\n    if (!listInputValue.find(({ value }) => value === inputValue)) {\n      setListInputValue([\n        { value: inputValue, done: false },\n        ...listInputValue,\n      ]);\n    } else {\n      alert(\"Tакой уже ЕСТЬ !\");\n    }\n    localStorage.setItem(\n      \"todosList\",\n      JSON.stringify([{ value: inputValue }, ...listInputValue])\n    );\n  };\n\n  const changeInputValue = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const deleteLiElement = (index) => {\n    listInputValue.splice(index, 1);\n    setListInputValue([...listInputValue]);\n    localStorage.setItem(\"todosList\", JSON.stringify(listInputValue));\n  };\n\n  const doneLiElement = (index) => {\n    listInputValue[index].done = !listInputValue[index].done;\n    setListInputValue([...listInputValue]);\n    localStorage.setItem(\"todosList\", JSON.stringify(listInputValue));\n  };\n\n  return (\n    <div>\n      <input type=\"text\" onChange={(e) => changeInputValue(e)} />\n      <button onClick={addListInputValue}>+ Add</button>\n      <ol>\n        {listInputValue.map((object, index) => (\n          <li key={index} className={`${object.done ? \"done-success\" : \"\"}`}>\n            {object.value}\n            {\"\"}\n            <button onClick={() => deleteLiElement(index)}>Delete</button>\n            <button\n              onClick={() => doneLiElement(index)}\n              className={`${object.done && \"button-success\"}`}\n            >\n              Done\n            </button>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"./Components/Button\";\nimport TodoList from \"./TodoList/TodoList\";\n\nfunction App() {\n  const [result, setResult] = useState(0);\n\n  const plus = () => {\n    setResult(result + 1);\n  };\n\n  const minus = () => {\n    setResult(result - 1);\n  };\n\n  const clear = () => {\n    setResult(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <Button text=\"-\" className=\"minus\" onClick={minus} />\n        <div className=\"result\">\n          <span>{result}</span>\n        </div>\n        <Button text=\"+\" className=\"plus\" onClick={plus} />\n        <Button\n          text=\"clear\"\n          // style={{ width: \"50px\" }}\n          className=\"clear\"\n          onClick={clear}\n        />\n      </div>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}